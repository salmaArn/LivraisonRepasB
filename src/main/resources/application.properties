spring.application.name=Livraison de repas
spring.datasource.url=jdbc:mysql://localhost/livrepas
spring.datasource.username=root
spring.datasource.password=
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.main.allow-circular-references=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect




# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.main.allow-bean-definition-overriding=true
spring.security.enable-csrf=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

spring.mail.host=smtp.gmail.com
spring.mail.port=587

spring.mail.username=abdrrahmanmimani@gmail.com
spring.mail.password=cqnn hcir vvgh bzqj
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls=true
spring.mail.properties.mail.debug=true




spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
# Allows Hibernate to generate SQL optimized for a particular DBMS

server.port = 8089
